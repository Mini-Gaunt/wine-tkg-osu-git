--- a/dlls/dsound/dsound_private.h	
+++ a/dlls/dsound/dsound_private.h	
@@ -21,7 +21,7 @@ 
 
 /* Linux does not support better timing than 10ms */
 #define DS_TIME_RES 2  /* Resolution of multimedia timer */
-#define DS_TIME_DEL 10  /* Delay of multimedia timer callback, and duration of HEL fragment */
+#define DS_TIME_DEL 5  /* Delay of multimedia timer callback, and duration of HEL fragment */
 
 #include "wine/list.h"
 
--- a/dlls/dsound/mixer.c	2023-12-13 18:39:13.896374758 -0500
+++ a/dlls/dsound/mixer.c	2023-12-13 18:47:36.332474397 -0500
@@ -658,6 +658,9 @@
  *
  * Returns: the number of frames beyond the writepos that were mixed.
  */
+
+#define MAXFRAGSPERROUND 1
+
 static DWORD DSOUND_MixOne(IDirectSoundBufferImpl *dsb, float *mix_buffer, DWORD frames)
 {
 	DWORD primary_done = 0;
@@ -668,9 +671,9 @@
 	/* If leading in, only mix about 20 ms, and 'skip' mixing the rest, for more fluid pointer advancement */
 	/* FIXME: Is this needed? */
 	if (dsb->leadin && dsb->state == STATE_STARTING) {
-		if (frames > 2 * dsb->device->frag_frames) {
-			primary_done = frames - 2 * dsb->device->frag_frames;
-			frames = 2 * dsb->device->frag_frames;
+		if (frames > MAXFRAGSPERROUND * dsb->device->frag_frames) {
+			primary_done = frames - MAXFRAGSPERROUND * dsb->device->frag_frames;
+                        frames = MAXFRAGSPERROUND * dsb->device->frag_frames;
 			dsb->sec_mixpos += primary_done *
 				dsb->pwfx->nBlockAlign * dsb->freqAdjustNum / dsb->freqAdjustDen;
 		}
